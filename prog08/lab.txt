1. Implement inOrder in TestSorter.java that returns false if the array
   is not sorted.  Use compareTo on every pair of adjacent items.


2. Implement sameElements using HashMap that returns false if the
   two arrays have different elements.  For example,

	array1 = { 3, 1, 4, 1, 5, 9, 2, 6 }
	array2 = { 1, 2, 2, 3, 4, 5, 6, 9 }

   The second array is sorted, but it has one 1 and two 2's instead of
   the other way around because the sorting algorithm has a bug.  So
   sameElements(array1, array2) would return false.


3. Finish implementing InsertionSort and test.

   Run TestTestSorter.java to get your score for the lab.


HOMEWORK

4. Ditto HeapSort.  (Uncomment line in main.)


5. Ditto QuickSort.


6. Ditto MergeSort.


7. Put the correct O() in each O() method.

   Modify test to print out the constant next to the running time.

   In tests, call test with powers of 10 from 10,000 to 10,000,000.

   Are the constants constant?  (Sort of?)


8. Write the merge method in ExternalSort.  Test on number.txt and
   then make your own file with different lengths to make sure you have
   it right.







